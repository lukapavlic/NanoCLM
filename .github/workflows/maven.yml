# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
defaults:
  run:
    working-directory: CLMRepo
    
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['4.2', '4.4', '5.0', '6.0']
      
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017

      activemq:
        image: rmohr/activemq:5.15.9
        ports:
          - 61616:61616
          - 8161:8161
          
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2  
    
    - name: Build with Maven
      run: mvn -B package --file ./pom.xml -DskipTests
      
    - name: Test with Maven
      run: mvn test --file ./pom.xml
    
  artefact-build:
      name: Build Artefact
      runs-on: ubuntu-latest
      needs: [build]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 17
        - run: mvn -B package --file pom.xml -DskipTests
        - run: mkdir staging && cp target/*.jar staging
        - uses: actions/upload-artifact@v1
          with:
            name: CLMRepo
            path: CLMRepo/staging
   
 # TO DO
  #build-docker-image:
  #  name: Build Docker image
  #  runs-on: ubuntu-latest
  #  needs: [build]

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Build docker-compose
  #      run: |
  #        docker-compose --file docker-compose.yml build

